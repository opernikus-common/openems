package io.openems.edge.evcs.compleo;

import io.openems.edge.evcs.api.Priority;
import org.osgi.service.metatype.annotations.AttributeDefinition;
import org.osgi.service.metatype.annotations.ObjectClassDefinition;

import io.openems.edge.evcs.api.PhaseRotation;

@ObjectClassDefinition(//
		name = "EVCS Compleo/Wallbe Eco2.0/Pro ", //
		description = "Implementation for the Compleo/Wallbe Eco2.0/Pro charging station")
@interface Config {

	@AttributeDefinition(name = "Component-ID", description = "Unique ID of this Component")
	String id() default "evcs0";

	@AttributeDefinition(name = "Alias", description = "Human-readable name of this Component; defaults to Component-ID")
	String alias() default "";

	@AttributeDefinition(name = "Is enabled?", description = "Is this Component enabled?")
	boolean enabled() default true;

	@AttributeDefinition(name = "Modbus-ID", description = "ID of Modbus bridge.")
	String modbus_id() default "modbus0";

	@AttributeDefinition(name = "Modbus Unit-ID", description = "The Unit-ID of the Modbus device.")
	int modbusUnitId() default 255;

	@AttributeDefinition(name = "Model", description = "What model is the charging station?")
	Model model() default Model.COMPLEO_ECO_20;

	@AttributeDefinition(name = "Minimum current", description = "Minimum current of charger in mA.")
	int minHwCurrent() default 6000;

	@AttributeDefinition(name = "Maximum current", description = "Maximum current of charger in mA.")
	int maxHwCurrent() default 16000;

	@AttributeDefinition(name = "Phase rotation", description = "The way in which the phases are physically swapped")
	PhaseRotation phaseRotation() default PhaseRotation.L1_L2_L3;

	@AttributeDefinition(name = "Charge Priority", description = "Priority in comparison to other chargepoints.")
	Priority priority() default Priority.LOW;

	@AttributeDefinition(name = "Start/Stop Delay", description = "time in s between a charging START and a charging STOP command (a random delay of up to 30s is added automatically).")
	int commandStartStopDelay() default 100;

	@AttributeDefinition(name = "Metering type", description = "How is this Evcs metered?")
	MeteringType meteringType() default MeteringType.WITH_INTEGRATED_METER;

	@AttributeDefinition(name = "Meter-ID", description = "ID of the meter in case the device is measured by an external meter")
	String meter_id() default "meter1";

	@AttributeDefinition(name = "RestartPilotSignal", description = "If set to 'true' the compleo EVCS restarts the pilot signal whenever it comes out of a resume phase(pwm = 0A)")
	boolean restartPilotSignal() default false;

	@AttributeDefinition(name = "Debug Mode", description = "Activates the debug mode")
	boolean debugMode() default false;

	@AttributeDefinition(name = "Modbus target filter", description = "This is auto-generated by 'Modbus-ID'.")
	String Modbus_target() default "(enabled=true)";

	@AttributeDefinition(name = "Meter target filter", description = "This is auto-generated by 'Meter-ID'.")
	String meter_target() default "(enabled=true)";

	String webconsole_configurationFactory_nameHint() default "EVCS Compleo/Wallbe Eco 2.0/Pro [{id}]";

}
