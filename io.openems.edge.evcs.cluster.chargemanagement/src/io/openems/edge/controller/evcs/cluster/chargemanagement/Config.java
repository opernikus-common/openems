package io.openems.edge.controller.evcs.cluster.chargemanagement;

import org.osgi.service.metatype.annotations.AttributeDefinition;
import org.osgi.service.metatype.annotations.ObjectClassDefinition;

@ObjectClassDefinition(//
		name = "Controller Evcs Cluster Limiter", //
		description = "Provides limits on a given meter to restrict an EvcsClusterChargeManagement.")
public @interface Config {

	@AttributeDefinition(name = "Component-ID", description = "Unique ID of this Component")
	String id() default "ctrlEvcsClusterLimiter0";

	@AttributeDefinition(name = "Alias", description = "Human-readable name of this Component; defaults to Component-ID")
	String alias() default "";

	@AttributeDefinition(name = "Is enabled?", description = "Is this Component enabled?")
	boolean enabled() default true;

	@AttributeDefinition(name = "Meter-ID", description = "ID of the Meter to limit the power for.")
	String meter_id() default "meter0";

	@AttributeDefinition(name = "Fuse Limit", description = "Limit ([A]) of the Fuse (per phase) for this power line segment .")
	int fuseLimit() default 32; // A

	@AttributeDefinition(name = "Fuse Safety Offset", description = "Fuse Safety Offset [A] - power per phase should always stay below (fuseLimit-fuseSafetyOffset).")
	int fuseSafetyOffset() default 8; // A

	@AttributeDefinition(name = "Target Power", description = "The targeted power [W] (for all phases). Controller tries to keep the meter around this level. "
			+ "This Limit is applied as sum on all three phases. targetPower needs to stay below (fuseLimit-(2*fuseSafetyOffset)) * 230V * 3.")
	int targetPower() default 7000; // W

	@AttributeDefinition(name = "Mean Filter Time", description = "Average power and current is calculated over the given time period in seconds. Values less or equal to 0 are ignored")
	int meanFilterTime() default 0; // s

	@AttributeDefinition(name = "Phase Imbalance Limiter?", description = "Set to true to make this controller the responsible phase imbalance limiter (typically the controller with the gridmeter is responsible for that)?")
	boolean isPhaseImbalanceLimiter() default false;

	@AttributeDefinition(name = "Phase Imbalance Current", description = "The max. phase imbalance current [A], 20 equals 4.5kW (see VDE-AR-N 4105).")
	int phaseImbalanceCurrent() default 20;

	@AttributeDefinition(name = "Meter target filter", description = "This is auto-generated by 'Meter-ID'.")
	String meter_target() default "(enabled=true)";

	String webconsole_configurationFactory_nameHint() default "Controller Evcs Cluster Limiter [{id}]";

}
